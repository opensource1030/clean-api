version: 2
jobs:
  build:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run: sudo apt install -y libsqlite3-dev zlib1g-dev libmcrypt-dev ruby
    - run: sudo docker-php-ext-install zip
    - run: sudo docker-php-ext-install mcrypt
    - run: sudo composer self-update
    - run: sudo gem install bundler
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-
    - run: mkdir -p build/logs/coverage_html
    - run: composer install --prefer-source --no-interaction
    - run: bundle install
    - run: chmod 600 ~/WirelessAnalytics/clean-api/storage/oauth-private.key
    - run: cp .env.test .env
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - vendor/bundle
        - ~/virtualenvs
        - ~/.m2
        - ~/.ivy2
        - ~/.bundle
        - ~/.go_workspace
        - ~/.gradle
        - ~/.cache/bower
  test_integration_admin:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=1 php vendor/bin/phpunit -c phpunit.xml --testsuite "Integration Tests" --exclude-group need-review --coverage-clover build/logs/clover-integration-admin.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-integration-admin.xml $CIRCLE_ARTIFACTS
  test_integration_wta:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=2 php vendor/bin/phpunit -c phpunit.xml --testsuite "Integration Tests" --exclude-group need-review --coverage-clover build/logs/clover-integration-wta.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-integration-wta.xml $CIRCLE_ARTIFACTS
  test_integration_user:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=3 php vendor/bin/phpunit -c phpunit.xml --testsuite "Integration Tests" --exclude-group need-review --coverage-clover build/logs/clover-integration-user.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-integration-user.xml $CIRCLE_ARTIFACTS
  test_unit_admin:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=1 php vendor/bin/phpunit -c phpunit.xml --testsuite "Unit Tests" --exclude-group need-review --coverage-clover build/logs/clover-unit-admin.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-unit-admin.xml $CIRCLE_ARTIFACTS
  test_unit_wta:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=2 php vendor/bin/phpunit -c phpunit.xml --testsuite "Unit Tests" --exclude-group need-review --coverage-clover build/logs/clover-unit-wta.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-unit-wta.xml $CIRCLE_ARTIFACTS
  test_unit_user:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=3 php vendor/bin/phpunit -c phpunit.xml --testsuite "Unit Tests" --exclude-group need-review --coverage-clover build/logs/clover-unit-user.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-unit-user.xml $CIRCLE_ARTIFACTS
  test_other_admin:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=1 php vendor/bin/phpunit -c phpunit.xml --testsuite "Unit Tests" --exclude-group need-review --coverage-clover build/logs/clover-other-admin.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-other-admin.xml $CIRCLE_ARTIFACTS
  test_other_wta:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=2 php vendor/bin/phpunit -c phpunit.xml --testsuite "Unit Tests" --exclude-group need-review --coverage-clover build/logs/clover-other-wta.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-other-wta.xml $CIRCLE_ARTIFACTS
  test_other_user:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: CLEAN_TEST_USER=3 php vendor/bin/phpunit -c phpunit.xml --testsuite "Unit Tests" --exclude-group need-review --coverage-clover build/logs/clover-other-user.xml -d memory_limit=2048M
    # This is based on your 1.0 configuration file or project settings
    - run: cp -r build/logs/clover-other-user.xml $CIRCLE_ARTIFACTS
  coveralls:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    - run: php vendor/bin/php-coveralls -v
  deployment:
    working_directory: ~/WirelessAnalytics/clean-api
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_ENV: test
    docker:
        - image: circleci/php:7.1-node-browsers
    steps:
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test_integration_admin:
          requires:
            - build
      - test_integration_wta:
          requires:
            - build
      - test_integration_user:
          requires:
            - build
      - test_unit_admin:
          requires:
            - build
      - test_unit_wta:
          requires:
            - build
      - test_unit_user:
          requires:
            - build
      - test_other_admin:
          requires:
            - build
      - test_other_wta:
          requires:
            - build
      - test_other_user:
          requires:
            - build
      - coveralls:
          requires:
            - test_integration_admin
            - test_integration_wta
            - test_integration_user
            - test_unit_admin
            - test_unit_wta
            - test_unit_user
            - test_other_admin
            - test_other_wta
            - test_other_user
      - deployment:
          requires:
            - coveralls
